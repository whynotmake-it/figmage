import 'package:code_builder/code_builder.dart';
import 'package:figmage/src/domain/generators/theme_class_generator.dart';
import 'package:figmage/src/domain/models/config/config.dart';
import 'package:figmage/src/domain/models/design_token.dart';
import 'package:figmage_package_generator/figmage_package_generator.dart';

/// A [FileGenerator] is a class that generates a file based on a specific type
/// of design tokens.
///
/// Aggregates the output from multiple [ThemeClassGenerator]s.
abstract interface class FileGenerator {
  /// The prefix for all generated files that are generated by this package.
  static const generatedFilePrefix = [
    'coverage:ignore-file',
    'GENERATED CODE - DO NOT MODIFY BY HAND',
    'ignore_for_file: type=lint',
  ];

  /// The type of the file that will be generated.
  TokenFileType get type;

  /// All generators that are responsible for generating the file.
  Iterable<ThemeClassGenerator> get generators;

  /// Generates the file based on the provided [ThemeClassGenerator]s.
  Library generate();
}

/// A [FileGenerator] that generates a file based on a given list of
/// [DesignToken]s.
abstract interface class DesignTokenFileGenerator<T> implements FileGenerator {
  /// The list of tokens that will be generated for.
  Iterable<DesignToken<T>> get tokens;

  /// The settings that specify which collection should implement which
  /// interface.
  Iterable<ImplementsSettings> get implementsSettings;
}
