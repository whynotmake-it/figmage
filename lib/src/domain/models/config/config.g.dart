// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'config.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

Config _$ConfigFromJson(Map json) => $checkedCreate(
      'Config',
      json,
      ($checkedConvert) {
        final val = Config(
          packageName: $checkedConvert('packageName', (v) => v as String?),
          fileId: $checkedConvert('fileId', (v) => v as String?),
          packageDescription: $checkedConvert(
              'packageDescription',
              (v) =>
                  v as String? ??
                  'A design tokens package, generated by figmage'),
          dropUnresolved:
              $checkedConvert('dropUnresolved', (v) => v as bool? ?? false),
          stylesFromLibrary:
              $checkedConvert('stylesFromLibrary', (v) => v as bool? ?? false),
          asPackage: $checkedConvert('asPackage', (v) => v as bool? ?? true),
          tokenPath: $checkedConvert('tokenPath', (v) => v as String? ?? 'src'),
          colors: $checkedConvert(
              'colors',
              (v) => v == null
                  ? const GenerationSettings()
                  : GenerationSettings.fromJson(v as Map)),
          typography: $checkedConvert(
              'typography',
              (v) => v == null
                  ? const TypographyGenerationSettings()
                  : TypographyGenerationSettings.fromJson(v as Map)),
          strings: $checkedConvert(
              'strings',
              (v) => v == null
                  ? const GenerationSettings()
                  : GenerationSettings.fromJson(v as Map)),
          bools: $checkedConvert(
              'bools',
              (v) => v == null
                  ? const GenerationSettings()
                  : GenerationSettings.fromJson(v as Map)),
          numbers: $checkedConvert(
              'numbers',
              (v) => v == null
                  ? const GenerationSettings()
                  : GenerationSettings.fromJson(v as Map)),
          spacers: $checkedConvert(
              'spacers',
              (v) => v == null
                  ? const GenerationSettings(generate: false)
                  : GenerationSettings.fromJson(v as Map)),
          paddings: $checkedConvert(
              'paddings',
              (v) => v == null
                  ? const GenerationSettings(generate: false)
                  : GenerationSettings.fromJson(v as Map)),
          radii: $checkedConvert(
              'radii',
              (v) => v == null
                  ? const GenerationSettings(generate: false)
                  : GenerationSettings.fromJson(v as Map)),
          assets: $checkedConvert(
              'assets',
              (v) => v == null
                  ? const AssetGenerationSettings()
                  : AssetGenerationSettings.fromJson(
                      Map<String, dynamic>.from(v as Map))),
        );
        return val;
      },
    );

Map<String, dynamic> _$ConfigToJson(Config instance) => <String, dynamic>{
      'packageName': instance.packageName,
      'fileId': instance.fileId,
      'packageDescription': instance.packageDescription,
      'dropUnresolved': instance.dropUnresolved,
      'stylesFromLibrary': instance.stylesFromLibrary,
      'asPackage': instance.asPackage,
      'tokenPath': instance.tokenPath,
      'colors': instance.colors.toJson(),
      'typography': instance.typography.toJson(),
      'strings': instance.strings.toJson(),
      'bools': instance.bools.toJson(),
      'numbers': instance.numbers.toJson(),
      'spacers': instance.spacers.toJson(),
      'paddings': instance.paddings.toJson(),
      'radii': instance.radii.toJson(),
      'assets': instance.assets.toJson(),
    };

GenerationSettings _$GenerationSettingsFromJson(Map json) => $checkedCreate(
      'GenerationSettings',
      json,
      ($checkedConvert) {
        final val = GenerationSettings(
          generate: $checkedConvert('generate', (v) => v as bool? ?? true),
          from: $checkedConvert(
              'from',
              (v) =>
                  (v as List<dynamic>?)?.map((e) => e as String) ?? const []),
          implements: $checkedConvert(
              'implements',
              (v) =>
                  (v as List<dynamic>?)?.map((e) => ImplementsSettings.fromJson(
                      Map<String, dynamic>.from(e as Map))) ??
                  const []),
        );
        return val;
      },
    );

Map<String, dynamic> _$GenerationSettingsToJson(GenerationSettings instance) =>
    <String, dynamic>{
      'generate': instance.generate,
      'from': instance.from.toList(),
      'implements': instance.implements.toList(),
    };

TypographyGenerationSettings _$TypographyGenerationSettingsFromJson(Map json) =>
    $checkedCreate(
      'TypographyGenerationSettings',
      json,
      ($checkedConvert) {
        final val = TypographyGenerationSettings(
          generate: $checkedConvert('generate', (v) => v as bool? ?? true),
          from: $checkedConvert(
              'from',
              (v) =>
                  (v as List<dynamic>?)?.map((e) => e as String) ?? const []),
          implements: $checkedConvert(
              'implements',
              (v) =>
                  (v as List<dynamic>?)?.map((e) => ImplementsSettings.fromJson(
                      Map<String, dynamic>.from(e as Map))) ??
                  const []),
          useGoogleFonts:
              $checkedConvert('useGoogleFonts', (v) => v as bool? ?? true),
        );
        return val;
      },
    );

Map<String, dynamic> _$TypographyGenerationSettingsToJson(
        TypographyGenerationSettings instance) =>
    <String, dynamic>{
      'generate': instance.generate,
      'from': instance.from.toList(),
      'implements': instance.implements.toList(),
      'useGoogleFonts': instance.useGoogleFonts,
    };

ImplementsSettings _$ImplementsSettingsFromJson(Map json) => $checkedCreate(
      'ImplementsSettings',
      json,
      ($checkedConvert) {
        final val = ImplementsSettings(
          collections: $checkedConvert(
              'collections',
              (v) =>
                  (v as List<dynamic>?)?.map((e) => e as String).toList() ??
                  const []),
          interfaces: $checkedConvert(
              'interfaces',
              (v) =>
                  (v as List<dynamic>?)
                      ?.map((e) => InterfaceSettings.fromJson(
                          Map<String, dynamic>.from(e as Map)))
                      .toList() ??
                  const []),
        );
        return val;
      },
    );

Map<String, dynamic> _$ImplementsSettingsToJson(ImplementsSettings instance) =>
    <String, dynamic>{
      'collections': instance.collections,
      'interfaces': instance.interfaces,
    };

InterfaceSettings _$InterfaceSettingsFromJson(Map json) => $checkedCreate(
      'InterfaceSettings',
      json,
      ($checkedConvert) {
        final val = InterfaceSettings(
          name: $checkedConvert('name', (v) => v as String),
          import: $checkedConvert('import', (v) => v as String),
        );
        return val;
      },
    );

Map<String, dynamic> _$InterfaceSettingsToJson(InterfaceSettings instance) =>
    <String, dynamic>{
      'name': instance.name,
      'import': instance.import,
    };

AssetNodeSettings _$AssetNodeSettingsFromJson(Map json) => $checkedCreate(
      'AssetNodeSettings',
      json,
      ($checkedConvert) {
        final val = AssetNodeSettings(
          name: $checkedConvert('name', (v) => v as String),
          scales: $checkedConvert(
              'scales',
              (v) =>
                  (v as List<dynamic>?)?.map((e) => e as num).toSet() ??
                  const {1}),
        );
        return val;
      },
    );

Map<String, dynamic> _$AssetNodeSettingsToJson(AssetNodeSettings instance) =>
    <String, dynamic>{
      'name': instance.name,
      'scales': instance.scales.toList(),
    };

AssetGenerationSettings _$AssetGenerationSettingsFromJson(Map json) =>
    $checkedCreate(
      'AssetGenerationSettings',
      json,
      ($checkedConvert) {
        final val = AssetGenerationSettings(
          generate: $checkedConvert('generate', (v) => v as bool? ?? false),
          nodes: $checkedConvert(
              'nodes',
              (v) =>
                  (v as Map?)?.map(
                    (k, e) => MapEntry(
                        k as String,
                        AssetNodeSettings.fromJson(
                            Map<String, dynamic>.from(e as Map))),
                  ) ??
                  const <String, AssetNodeSettings>{}),
        );
        return val;
      },
    );

Map<String, dynamic> _$AssetGenerationSettingsToJson(
        AssetGenerationSettings instance) =>
    <String, dynamic>{
      'generate': instance.generate,
      'nodes': instance.nodes.map((k, e) => MapEntry(k, e.toJson())),
    };
