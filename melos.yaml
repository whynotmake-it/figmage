name: figmage_workspace

packages:
  - .
  - packages/*

command:
  bootstrap:
    hooks:
      pre: |
        dart pub global activate coverage
        dart pub global activate full_coverage
  version:
    updateGitTagRefs: true
    workspaceChangelog: false
    hooks:
      preCommit: |
        melos run generate
        git add .

scripts:
  analyze:
    run: |
      dart analyze . --fatal-infos
    exec:
      # We are setting the concurrency to 1 because a higher concurrency can crash
      # the analysis server on low performance machines (like GitHub Actions).
      concurrency: 1
    description: |
      Run `dart analyze` in all packages.
       - Note: you can also rely on your IDEs Dart Analysis / Issues window.

  test:select:
    run: dart test
    exec:
      concurrency: 6
      failFast: true
    packageFilters:
      dirExists: test
    description: Run `dart test` for selected packages.

  test:
    run: melos run test:select --no-select
    description: Run all dart tests in this project.

  coverage:select:
    run: |
      dart pub global run full_coverage --ignore '*}.dart'
      dart test --coverage=coverage
      dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info -c --report-on=lib
      rm -rf -f coverage/test/
      rm -f coverage/coverage.json
    exec:
      concurrency: 6
      failFast: true

    packageFilters:
      dirExists: test
    description: Generate coverage for the selected package.

  coverage:
    run: melos run coverage:select --no-select
    description: Generate coverage for all packages.

  generate:select:
    description: Generate code for selected packages.
    run: dart run build_runner build --delete-conflicting-outputs
    exec:
      concurrency: 1
      failFast: true
    packageFilters:
      dependsOn:
        - build_runner
  
  generate:
    description: Generate code for all packages.
    run: melos run generate:select --no-select
